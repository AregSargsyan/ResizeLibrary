{"version":3,"sources":["../../../projects/angular-elements-resizer/src/lib/resizable.directive.ts","../../../projects/angular-elements-resizer/src/lib/angular-elements-resizer.module.ts"],"names":["ResizableDirective","renderer","elementRef","zone","this","isGrabbing","previousX","previousY","hostLeft","hostLeftMargin","hostRight","hostRightMargin","hostTop","hostTopMargin","hostBottom","hostBottomMargin","hostMaxWidth","hostMinWidth","hostMaxHeight","hostMinHeight","onDestroy$","Subject","prototype","mouseMoveOnElement","event","elRightBorder","hostCoordinates","right","elLeftBorder","left","elTopBorder","top","elBottomBorder","bottom","clientX","clientY","setStyle","nativeElement","mouseOnBorder","removeStyle","getBoundingClientRect","onMouseDown","hostWidth","parseFloat","getComputedStyle","width","hostHeight","height","marginLeft","marginRight","marginTop","marginBottom","maxWidth","minWidth","maxHeight","minHeight","preventDefault","onMouseMove","resizeElementFromTheTop","resizeElementFromTheBottom","resizeElementFromTheLeft","resizeElementFromTheRight","position","onMouseUp","setSubscriptions","_this","mouseMoveOnElement$","fromEvent","pipe","takeUntil","subscribe","mouseDownOnElement$","mouseMoveonDocument$","document","mouseUpOnDocument$","ngOnInit","runOutsideAngular","ngOnDestroy","next","complete","Directive","args","selector","Renderer2","ElementRef","NgZone","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { Directive, ElementRef, Renderer2, NgZone } from '@angular/core';\nimport { fromEvent, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport type ResizeDirection = 'top' | 'bottom' | 'right' | 'left' | 'top_right' | 'bottom_right' | 'bottom_left' | 'top_left' | false\n\n@Directive({\n  selector: '[resizable]',\n})\n\nexport class ResizableDirective {\n\n  hostCoordinates: DOMRect\n  isGrabbing: boolean = false\n  hostWidth: number\n  hostHeight: number\n  previousX: number = 0\n  previousY: number = 0\n  hostLeft: number = 0\n  hostLeftMargin: number = 0\n  hostRight: number = 0\n  hostRightMargin: number = 0\n  hostTop: number = 0\n  hostTopMargin: number = 0\n  hostBottom: number = 0\n  hostBottomMargin: number = 0\n  hostMaxWidth: number = 0\n  hostMinWidth: number = 0\n  hostMaxHeight: number = 0\n  hostMinHeight: number = 0\n  mouseOnBorder: ResizeDirection\n  mouseMoveOnElement$: Subscription\n  mouseDownOnElement$: Subscription\n  mouseMoveonDocument$: Subscription\n  mouseUpOnDocument$: Subscription\n  onDestroy$ = new Subject<void>();\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef, private zone: NgZone) { }\n\n  private mouseMoveOnElement(event: MouseEvent) {\n\n    const elRightBorder = this.hostCoordinates.right\n    const elLeftBorder = this.hostCoordinates.left\n    const elTopBorder = this.hostCoordinates.top\n    const elBottomBorder = this.hostCoordinates.bottom\n\n    if ((elRightBorder - event.clientX) < 10 && (elRightBorder - event.clientX) > -10 && !this.isGrabbing) {\n      if ((elTopBorder - event.clientY) < 10 && (elTopBorder - event.clientY) > -10) {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'nesw-resize')\n        this.mouseOnBorder = 'top_right'\n      }\n      else if ((elBottomBorder - event.clientY) < 10 && (elBottomBorder - event.clientY) > -10) {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'se-resize')\n        this.mouseOnBorder = 'bottom_right'\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'e-resize')\n        this.mouseOnBorder = 'right'\n      }\n    }\n\n    else if ((elBottomBorder - event.clientY) < 10 && (elBottomBorder - event.clientY) > -10 && !this.isGrabbing) {\n      if ((elLeftBorder - event.clientX) < 10 && (elLeftBorder - event.clientX) > -10) {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'nesw-resize')\n        this.mouseOnBorder = 'bottom_left'\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 's-resize')\n        this.mouseOnBorder = 'bottom'\n      }\n    }\n\n    else if ((elLeftBorder - event.clientX) < 10 && (elLeftBorder - event.clientX) > -10 && !this.isGrabbing) {\n      if ((elTopBorder - event.clientY) < 10 && (elTopBorder - event.clientY) > -10) {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'se-resize')\n        this.mouseOnBorder = 'top_left'\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'e-resize')\n        this.mouseOnBorder = 'left'\n      }\n    }\n\n    else if ((elTopBorder - event.clientY) < 10 && (elTopBorder - event.clientY) > -10 && !this.isGrabbing) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 's-resize')\n      this.mouseOnBorder = 'top'\n    }\n\n    else if (!this.isGrabbing) {\n      this.renderer.removeStyle(this.elementRef.nativeElement, 'cursor')\n      this.mouseOnBorder = false\n    }\n    this.hostCoordinates = this.elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  private onMouseDown(event: MouseEvent) {\n    if (this.mouseOnBorder) {\n      this.hostWidth = parseFloat(getComputedStyle(this.elementRef.nativeElement).width)\n      this.hostHeight = parseFloat(getComputedStyle(this.elementRef.nativeElement).height)\n      this.hostLeft = parseFloat(getComputedStyle(this.elementRef.nativeElement).left)\n      this.hostRight = parseFloat(getComputedStyle(this.elementRef.nativeElement).right)\n      this.hostLeftMargin = parseFloat(getComputedStyle(this.elementRef.nativeElement).marginLeft)\n      this.hostRightMargin = parseFloat(getComputedStyle(this.elementRef.nativeElement).marginRight)\n      this.hostTop = parseFloat(getComputedStyle(this.elementRef.nativeElement).top)\n      this.hostTopMargin = parseFloat(getComputedStyle(this.elementRef.nativeElement).marginTop)\n      this.hostBottom = parseFloat(getComputedStyle(this.elementRef.nativeElement).bottom)\n      this.hostBottomMargin = parseFloat(getComputedStyle(this.elementRef.nativeElement).marginBottom)\n      this.hostMaxWidth = parseFloat(getComputedStyle(this.elementRef.nativeElement).maxWidth)\n      this.hostMinWidth = parseFloat(getComputedStyle(this.elementRef.nativeElement).minWidth)\n      this.hostMaxHeight = parseFloat(getComputedStyle(this.elementRef.nativeElement).maxHeight)\n      this.hostMinHeight = parseFloat(getComputedStyle(this.elementRef.nativeElement).minHeight)\n      this.isGrabbing = true\n      this.previousX = event.clientX\n      this.previousY = event.clientY\n      event.preventDefault()\n    }\n  }\n\n\n\n  private onMouseMove(event: MouseEvent) {\n    if (this.isGrabbing && this.mouseOnBorder) {\n      if (this.mouseOnBorder == 'top') {\n        this.resizeElementFromTheTop(event)\n      }\n      else if (this.mouseOnBorder == 'bottom') {\n        this.resizeElementFromTheBottom(event)\n      }\n      else if (this.mouseOnBorder == 'left') {\n        this.resizeElementFromTheLeft(event)\n      }\n      else if (this.mouseOnBorder == 'right') {\n        this.resizeElementFromTheRight(event)\n      }\n      else if (this.mouseOnBorder == 'top_left') {\n        this.resizeElementFromTheLeft(event)\n        this.resizeElementFromTheTop(event)\n      }\n      else if (this.mouseOnBorder == 'top_right') {\n        this.resizeElementFromTheRight(event)\n        this.resizeElementFromTheTop(event)\n      }\n      else if (this.mouseOnBorder == 'bottom_right') {\n        this.resizeElementFromTheRight(event)\n        this.resizeElementFromTheBottom(event)\n      }\n      else if (this.mouseOnBorder == 'bottom_left') {\n        this.resizeElementFromTheLeft(event)\n        this.resizeElementFromTheBottom(event)\n      }\n    }\n    this.hostCoordinates = this.elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  private resizeElementFromTheBottom(event: MouseEvent) {\n    this.hostHeight += event.clientY - this.previousY\n    this.hostBottom -= event.clientY - this.previousY\n    this.hostBottomMargin -= event.clientY - this.previousY\n    this.previousY = event.clientY\n    if (this.hostHeight < 0 || this.hostHeight < this.hostMinHeight || this.hostHeight > this.hostMaxHeight) return\n    else {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'height', `${this.hostHeight}px`)\n      if (getComputedStyle(this.elementRef.nativeElement).position == 'absolute' || getComputedStyle(this.elementRef.nativeElement).position == \"fixed\") {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'bottom', `${this.hostBottom}px`)\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'margin-bottom', `${this.hostBottomMargin}px`)\n      }\n    }\n  }\n\n  private resizeElementFromTheTop(event: MouseEvent) {\n    this.hostHeight -= event.clientY - this.previousY\n    this.hostTop += event.clientY - this.previousY\n    this.hostTopMargin += event.clientY - this.previousY\n    this.previousY = event.clientY\n    if (this.hostHeight < 0 || this.hostHeight < this.hostMinHeight || this.hostHeight > this.hostMaxHeight) return\n    else {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'height', `${this.hostHeight}px`)\n      if (getComputedStyle(this.elementRef.nativeElement).position == 'absolute' || getComputedStyle(this.elementRef.nativeElement).position == \"fixed\") {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'top', `${this.hostTop}px`)\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'margin-top', `${this.hostTopMargin}px`)\n      }\n    }\n  }\n\n  private resizeElementFromTheRight(event: MouseEvent) {\n    this.hostWidth += event.clientX - this.previousX\n    this.hostRight -= event.clientX - this.previousX\n    this.hostRightMargin -= event.clientX - this.previousX\n    this.previousX = event.clientX\n    if (this.hostWidth < 0 || this.hostWidth < this.hostMinWidth || this.hostWidth > this.hostMaxWidth) return\n    else {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.hostWidth}px`)\n      if (getComputedStyle(this.elementRef.nativeElement).position == 'absolute' || getComputedStyle(this.elementRef.nativeElement).position == \"fixed\") {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'right', `${this.hostRight}px`)\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'margin-right', `${this.hostRightMargin}px`)\n      }\n    }\n  }\n\n  private resizeElementFromTheLeft(event: MouseEvent) {\n    this.hostWidth -= event.clientX - this.previousX\n    this.hostLeft += event.clientX - this.previousX\n    this.hostLeftMargin += event.clientX - this.previousX\n    this.previousX = event.clientX\n    if (this.hostWidth <= 0 || this.hostWidth <= this.hostMinWidth || this.hostWidth >= this.hostMaxWidth) return\n    else {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.hostWidth}px`)\n      if (getComputedStyle(this.elementRef.nativeElement).position == 'absolute' || getComputedStyle(this.elementRef.nativeElement).position == \"fixed\") {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'left', `${this.hostLeft}px`)\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'margin-left', `${this.hostLeftMargin}px`)\n      }\n    }\n\n  }\n\n  private onMouseUp() {\n    if (this.isGrabbing) {\n      this.isGrabbing = false\n    }\n  }\n\n  private setSubscriptions() {\n    this.mouseMoveOnElement$ = fromEvent(this.elementRef.nativeElement, 'mousemove')\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe((event: MouseEvent) => this.mouseMoveOnElement(event))\n    this.mouseDownOnElement$ = fromEvent(this.elementRef.nativeElement, 'mousedown')\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe((event: MouseEvent) => this.onMouseDown(event))\n    this.mouseMoveonDocument$ = fromEvent(document, 'mousemove')\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe((event: MouseEvent) => this.onMouseMove(event))\n    this.mouseUpOnDocument$ = fromEvent(document, 'mouseup')\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe(() => this.onMouseUp())\n  }\n\n  ngOnInit(): void {\n    this.hostCoordinates = this.elementRef.nativeElement.getBoundingClientRect();\n    this.zone.runOutsideAngular(() => this.setSubscriptions())\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next()\n    this.onDestroy$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ResizableDirective } from './resizable.directive';\n\n\n\n@NgModule({\n  declarations: [ ResizableDirective],\n  imports: [\n  ],\n  exports: [ResizableDirective]\n})\nexport class AngularElementsResizerModule { }\n"]}