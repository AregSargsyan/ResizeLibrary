{"version":3,"sources":["../../../projects/angular-elements-resizer/src/lib/resizable.directive.ts","../../../projects/angular-elements-resizer/src/lib/angular-elements-resizer.module.ts"],"names":["ResizableDirective","renderer","elementRef","zone","this","isGrabbing","previousX","previousY","hostLeft","hostLeftMargin","hostRight","hostRightMargin","hostTop","hostTopMargin","hostBottom","hostBottomMargin","hostMaxWidth","hostMinWidth","hostMaxHeight","hostMinHeight","onDestroy$","Subject","resizingStart","EventEmitter","resizingElement","resizingEnd","prototype","mouseMoveOnElement","event","elRightBorder","hostCoordinates","right","elLeftBorder","left","elTopBorder","top","elBottomBorder","bottom","clientX","clientY","setStyle","nativeElement","mouseOnBorder","removeStyle","getBoundingClientRect","onMouseDown","hostWidth","parseFloat","getComputedStyle","width","hostHeight","height","marginLeft","marginRight","marginTop","marginBottom","maxWidth","minWidth","maxHeight","minHeight","emit","outputData","preventDefault","onMouseMove","resizeElementFromTheTop","resizeElementFromTheBottom","resizeElementFromTheLeft","resizeElementFromTheRight","position","onMouseUp","elementStyles","mouseevent","setSubscriptions","_this","mouseMoveOnElement$","fromEvent","pipe","takeUntil","subscribe","mouseDownOnElement$","mouseMoveonDocument$","document","mouseUpOnDocument$","ngOnInit","runOutsideAngular","ngOnDestroy","next","complete","Directive","args","selector","Renderer2","ElementRef","NgZone","Output","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { EventEmitter,Output,Directive, ElementRef, Renderer2, NgZone } from '@angular/core';\nimport { fromEvent, Subject, Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nexport type ResizeDirection = 'top' | 'bottom' | 'right' | 'left' | 'top_right' | 'bottom_right' | 'bottom_left' | 'top_left' | false\n\nexport interface EventInterface {\n  elementStyles: CSSStyleDeclaration;\n  mouseevent: MouseEvent;\n}\n\n@Directive({\n  selector: '[resizable]',\n})\n\nexport class ResizableDirective {\n\n  hostCoordinates: DOMRect\n  isGrabbing: boolean = false\n  hostWidth: number\n  hostHeight: number\n  previousX: number = 0\n  previousY: number = 0\n  hostLeft: number = 0\n  hostLeftMargin: number = 0\n  hostRight: number = 0\n  hostRightMargin: number = 0\n  hostTop: number = 0\n  hostTopMargin: number = 0\n  hostBottom: number = 0\n  hostBottomMargin: number = 0\n  hostMaxWidth: number = 0\n  hostMinWidth: number = 0\n  hostMaxHeight: number = 0\n  hostMinHeight: number = 0\n  mouseOnBorder: ResizeDirection\n  mouseMoveOnElement$: Subscription\n  mouseDownOnElement$: Subscription\n  mouseMoveonDocument$: Subscription\n  mouseUpOnDocument$: Subscription\n  onDestroy$ = new Subject<void>();\n\n  @Output() resizingStart = new EventEmitter<EventInterface>()\n  @Output() resizingElement = new EventEmitter<EventInterface>()\n  @Output() resizingEnd = new EventEmitter<EventInterface>()\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef, private zone: NgZone) { }\n\n  private mouseMoveOnElement(event: MouseEvent) {\n\n    const elRightBorder = this.hostCoordinates.right\n    const elLeftBorder = this.hostCoordinates.left\n    const elTopBorder = this.hostCoordinates.top\n    const elBottomBorder = this.hostCoordinates.bottom\n\n    if ((elRightBorder - event.clientX) < 10 && (elRightBorder - event.clientX) > -10 && !this.isGrabbing) {\n      if ((elTopBorder - event.clientY) < 10 && (elTopBorder - event.clientY) > -10) {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'nesw-resize')\n        this.mouseOnBorder = 'top_right'\n      }\n      else if ((elBottomBorder - event.clientY) < 10 && (elBottomBorder - event.clientY) > -10) {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'se-resize')\n        this.mouseOnBorder = 'bottom_right'\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'e-resize')\n        this.mouseOnBorder = 'right'\n      }\n    }\n\n    else if ((elBottomBorder - event.clientY) < 10 && (elBottomBorder - event.clientY) > -10 && !this.isGrabbing) {\n      if ((elLeftBorder - event.clientX) < 10 && (elLeftBorder - event.clientX) > -10) {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'nesw-resize')\n        this.mouseOnBorder = 'bottom_left'\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 's-resize')\n        this.mouseOnBorder = 'bottom'\n      }\n    }\n\n    else if ((elLeftBorder - event.clientX) < 10 && (elLeftBorder - event.clientX) > -10 && !this.isGrabbing) {\n      if ((elTopBorder - event.clientY) < 10 && (elTopBorder - event.clientY) > -10) {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'se-resize')\n        this.mouseOnBorder = 'top_left'\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 'e-resize')\n        this.mouseOnBorder = 'left'\n      }\n    }\n\n    else if ((elTopBorder - event.clientY) < 10 && (elTopBorder - event.clientY) > -10 && !this.isGrabbing) {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'cursor', 's-resize')\n      this.mouseOnBorder = 'top'\n    }\n\n    else if (!this.isGrabbing) {\n      this.renderer.removeStyle(this.elementRef.nativeElement, 'cursor')\n      this.mouseOnBorder = false\n    }\n    this.hostCoordinates = this.elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  private onMouseDown(event: MouseEvent) {\n    if (this.mouseOnBorder) {\n      this.hostWidth = parseFloat(getComputedStyle(this.elementRef.nativeElement).width)\n      this.hostHeight = parseFloat(getComputedStyle(this.elementRef.nativeElement).height)\n      this.hostLeft = parseFloat(getComputedStyle(this.elementRef.nativeElement).left)\n      this.hostRight = parseFloat(getComputedStyle(this.elementRef.nativeElement).right)\n      this.hostLeftMargin = parseFloat(getComputedStyle(this.elementRef.nativeElement).marginLeft)\n      this.hostRightMargin = parseFloat(getComputedStyle(this.elementRef.nativeElement).marginRight)\n      this.hostTop = parseFloat(getComputedStyle(this.elementRef.nativeElement).top)\n      this.hostTopMargin = parseFloat(getComputedStyle(this.elementRef.nativeElement).marginTop)\n      this.hostBottom = parseFloat(getComputedStyle(this.elementRef.nativeElement).bottom)\n      this.hostBottomMargin = parseFloat(getComputedStyle(this.elementRef.nativeElement).marginBottom)\n      this.hostMaxWidth = parseFloat(getComputedStyle(this.elementRef.nativeElement).maxWidth)\n      this.hostMinWidth = parseFloat(getComputedStyle(this.elementRef.nativeElement).minWidth)\n      this.hostMaxHeight = parseFloat(getComputedStyle(this.elementRef.nativeElement).maxHeight)\n      this.hostMinHeight = parseFloat(getComputedStyle(this.elementRef.nativeElement).minHeight)\n      this.isGrabbing = true\n      this.previousX = event.clientX\n      this.previousY = event.clientY\n      this.resizingStart.emit(this.outputData(event))\n      event.preventDefault()\n    }\n  }\n\n\n\n  private onMouseMove(event: MouseEvent) {\n    if (this.isGrabbing && this.mouseOnBorder) {\n      if (this.mouseOnBorder == 'top') {\n        this.resizeElementFromTheTop(event)\n      }\n      else if (this.mouseOnBorder == 'bottom') {\n        this.resizeElementFromTheBottom(event)\n      }\n      else if (this.mouseOnBorder == 'left') {\n        this.resizeElementFromTheLeft(event)\n      }\n      else if (this.mouseOnBorder == 'right') {\n        this.resizeElementFromTheRight(event)\n      }\n      else if (this.mouseOnBorder == 'top_left') {\n        this.resizeElementFromTheLeft(event)\n        this.resizeElementFromTheTop(event)\n      }\n      else if (this.mouseOnBorder == 'top_right') {\n        this.resizeElementFromTheRight(event)\n        this.resizeElementFromTheTop(event)\n      }\n      else if (this.mouseOnBorder == 'bottom_right') {\n        this.resizeElementFromTheRight(event)\n        this.resizeElementFromTheBottom(event)\n      }\n      else if (this.mouseOnBorder == 'bottom_left') {\n        this.resizeElementFromTheLeft(event)\n        this.resizeElementFromTheBottom(event)\n      }\n      this.resizingElement.emit(this.outputData(event))\n    }\n    this.hostCoordinates = this.elementRef.nativeElement.getBoundingClientRect();\n  }\n\n  private resizeElementFromTheBottom(event: MouseEvent) {\n    this.hostHeight += event.clientY - this.previousY\n    this.hostBottom -= event.clientY - this.previousY\n    this.hostBottomMargin -= event.clientY - this.previousY\n    this.previousY = event.clientY\n    if (this.hostHeight < 0 || this.hostHeight < this.hostMinHeight || this.hostHeight > this.hostMaxHeight) return\n    else {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'height', `${this.hostHeight}px`)\n      if (getComputedStyle(this.elementRef.nativeElement).position == 'absolute' || getComputedStyle(this.elementRef.nativeElement).position == \"fixed\") {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'bottom', `${this.hostBottom}px`)\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'margin-bottom', `${this.hostBottomMargin}px`)\n      }\n    }\n  }\n\n  private resizeElementFromTheTop(event: MouseEvent) {\n    this.hostHeight -= event.clientY - this.previousY\n    this.hostTop += event.clientY - this.previousY\n    this.hostTopMargin += event.clientY - this.previousY\n    this.previousY = event.clientY\n    if (this.hostHeight < 0 || this.hostHeight < this.hostMinHeight || this.hostHeight > this.hostMaxHeight) return\n    else {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'height', `${this.hostHeight}px`)\n      if (getComputedStyle(this.elementRef.nativeElement).position == 'absolute' || getComputedStyle(this.elementRef.nativeElement).position == \"fixed\") {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'top', `${this.hostTop}px`)\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'margin-top', `${this.hostTopMargin}px`)\n      }\n    }\n  }\n\n  private resizeElementFromTheRight(event: MouseEvent) {\n    this.hostWidth += event.clientX - this.previousX\n    this.hostRight -= event.clientX - this.previousX\n    this.hostRightMargin -= event.clientX - this.previousX\n    this.previousX = event.clientX\n    if (this.hostWidth < 0 || this.hostWidth < this.hostMinWidth || this.hostWidth > this.hostMaxWidth) return\n    else {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.hostWidth}px`)\n      if (getComputedStyle(this.elementRef.nativeElement).position == 'absolute' || getComputedStyle(this.elementRef.nativeElement).position == \"fixed\") {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'right', `${this.hostRight}px`)\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'margin-right', `${this.hostRightMargin}px`)\n      }\n    }\n  }\n\n  private resizeElementFromTheLeft(event: MouseEvent) {\n    this.hostWidth -= event.clientX - this.previousX\n    this.hostLeft += event.clientX - this.previousX\n    this.hostLeftMargin += event.clientX - this.previousX\n    this.previousX = event.clientX\n    if (this.hostWidth <= 0 || this.hostWidth <= this.hostMinWidth || this.hostWidth >= this.hostMaxWidth) return\n    else {\n      this.renderer.setStyle(this.elementRef.nativeElement, 'width', `${this.hostWidth}px`)\n      if (getComputedStyle(this.elementRef.nativeElement).position == 'absolute' || getComputedStyle(this.elementRef.nativeElement).position == \"fixed\") {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'left', `${this.hostLeft}px`)\n      }\n      else {\n        this.renderer.setStyle(this.elementRef.nativeElement, 'margin-left', `${this.hostLeftMargin}px`)\n      }\n    }\n\n  }\n\n  private onMouseUp(event: MouseEvent) {\n    if (this.isGrabbing) {\n      this.resizingEnd.emit(this.outputData(event))\n      this.isGrabbing = false\n    }\n  }\n\n  private outputData(event): EventInterface {\n    return {\n      elementStyles: getComputedStyle(this.elementRef.nativeElement),\n      mouseevent: event\n    }\n  }\n\n  private setSubscriptions() {\n    this.mouseMoveOnElement$ = fromEvent(this.elementRef.nativeElement, 'mousemove')\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe((event: MouseEvent) => this.mouseMoveOnElement(event))\n    this.mouseDownOnElement$ = fromEvent(this.elementRef.nativeElement, 'mousedown')\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe((event: MouseEvent) => this.onMouseDown(event))\n    this.mouseMoveonDocument$ = fromEvent(document, 'mousemove')\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe((event: MouseEvent) => this.onMouseMove(event))\n    this.mouseUpOnDocument$ = fromEvent(document, 'mouseup')\n      .pipe(takeUntil(this.onDestroy$))\n      .subscribe((event: MouseEvent) => this.onMouseUp(event))\n  }\n\n  ngOnInit(): void {\n    this.hostCoordinates = this.elementRef.nativeElement.getBoundingClientRect();\n    this.zone.runOutsideAngular(() => this.setSubscriptions())\n  }\n\n  ngOnDestroy(): void {\n    this.onDestroy$.next()\n    this.onDestroy$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ResizableDirective } from './resizable.directive';\n\n\n\n@NgModule({\n  declarations: [ ResizableDirective],\n  imports: [\n  ],\n  exports: [ResizableDirective]\n})\nexport class AngularElementsResizerModule { }\n"]}